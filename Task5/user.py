# -*- coding: utf-8 -*-
"""User.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qcdOqWWs1rRQ3_uyUdzovUqcXPCxdD4B
"""

import numpy as np 
import pickle 
import streamlit as st 
import pandas as pd
#import  warnings 
#warnings.filterwarnings("ignore")

load_model=pickle.load(open("trained_model.sav","rb"))
df_before_dummies= pd.read_csv("df_before_dummies")

def full_input_data (data_before_dm,city_name="Seattle",input_data=[5,2,2000,7000,2,0,0,4,9,2000,0,2011,47.3,-122.5,2100,7400,0,2015,10]) :
  """predection for any data input to the model"""
  x=np.array(input_data)
  x=pd.DataFrame(x)
  x=x.transpose()
  df1=pd.get_dummies(pd.DataFrame({'city':[city_name]}))
  df1=df1.reindex(columns = pd.get_dummies(data_before_dm["city"],drop_first=True).columns, fill_value=0)
  df1=df1.drop("Carnation",axis=1)
  new_test=pd.concat([x,df1],axis=1)
  prediction=load_model.predict(new_test)
  return prediction
  

full_input_data(data_before_dm=df_before_dummies,city_name="Seattle")

def main () : 
  """creating interactive page, for the user to enter any input """
  #giving a title
  st.title('House Pricing Predector')
  #getting the input data from the user
  
  bedrooms = st.number_input('number of bedrroms:')  
  bathrooms = st.number_input('number of bathrooms:')
  sqft_living = st.number_input('Area of the interior space (in square footage):')
  sqft_lot = st.number_input('Area of the land space (in square footage) :')
  floors = st.number_input('Number of floors:')
  waterfront = st.number_input('Is there a waterfront? (0: No waterfront, 1:If there is a waterfront)')
  view = st.number_input('Is there a view? (0: No view, 1:If there is a view)')
  condition = st.number_input('Condition of the house: (from 1-5, 1 is the lowest)')
  grade = st.number_input('Grade of the house ?(Grade is the quality level of construction and design, from 1-13, 1 is the lowest)')
  sqft_above = st.number_input('Area of the interior house without the basment (in square footage):')
  sqft_basement = st.number_input('Area of the basment (in square footage):')
  yr_built = st.number_input('Building year:')
  lat = st.number_input('Latitude of the house (from 47.15 to 47.77):')
  long = st.number_input('Longitude of the house (from -122.50 to -121.30):')
  sqft_living15 = st.number_input('Area of interior housing living space for the nearest 15 neighbors (in square footage):')
  sqft_lot15 = st.number_input('Area of the land lots of the nearest 15 neighbors (in square footage):')
  is_renovated = st.number_input('Is the house renovated?')
  year = st.number_input('Selling year:')
  month = st.number_input('Selling month:')
  city=st.selectbox("city name",('Bellevue', 'Black Diamond', 'Bothell','Duvall', 'Fall City', 'Federal Way', 'Issaquah',
       'Kenmore', 'Kirkland', 'Maple Valley', 'Medina', 'Mercer Island',
       'North Bend', 'Redmond', 'Renton', 'Sammamish', 'Seattle', 'Snoqualmie',
       'Woodinville'))
  #code for prediction
  price = ''
  #creating a button for prediction
  if st.button('Price of the house:'):
    price = full_input_data(df_before_dummies,city_name=city,input_data=[bedrooms,bathrooms,sqft_living,sqft_lot,floors,waterfront,view,condition,grade,sqft_above,sqft_basement,yr_built,lat,long,sqft_living15,sqft_lot15,is_renovated,year,month])

  st.success(price) 



if __name__ == '__main__':
  main()


